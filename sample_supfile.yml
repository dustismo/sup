# Supfile for "Example" server
---

env: # Environment variables for the commands
  NAME: example
  REPO: github.com/pressly/stackup
  BRANCH: master
  IMAGE: pressly/example
  HOST_PORT: 8000
  CONTAINER_PORT: 8000

networks: # Groups of hosts
  local:
    env:
      CONFIG: example.local.cfg
    hosts:
      - localhost

  dev:
    env:
      CONFIG: example.dev.cfg
    hosts:
      - docker@192.168.59.103

  stg:
    env:
      CONFIG: example.stg.cfg
    hosts:
      - ubuntu@stg.example.com

  prod:
    env:
      CONFIG: example.prod.cfg
    host_inventory: ./fetch_production_hosts
    hosts:
      - ubuntu@prod1.example.com
      - ubuntu@prod2.example.com
      - ubuntu@prod3.example.com

commands: # Named set of commands to be run remotely
  ping:
    desc: Print uname and current date/time.
    run: uname -a; date

  upload:
    desc: Upload this repository
    upload:
      - src: ./
        dst: /tmp/$IMAGE

  build:
    desc: Build Docker image
    script: ./scripts/docker-build.sh

  image:
    desc: List Docker image
    run: sudo docker images | grep $IMAGE

  config:
    desc: Upload/test config file.
    upload:
      - src: ./$CONFIG
        dst: /tmp/
    run: test -f /tmp/$CONFIG

  # pull:
  #   desc: Pull git repository
  #   script: ./scripts/docker-pull.sh

  stop:
    desc: Stop Docker container
    run: sudo docker stop $NAME || exit 0

  rm:
    desc: Remove Docker container
    run: sudo docker rm $NAME || exit 0

  start:
    desc: Start a stopped Docker container
    run: sudo docker start $NAME || exit 0

  run:
    desc: Run Docker container
    script: ./scripts/docker-run.sh

  restart:
    desc: Restart Docker container
    run: sudo docker restart $NAME || exit 0

  ps:
    desc: List running Docker containers
    run: sudo docker ps | grep $NAME

  logs:
    desc: Docker logs
    run: sudo docker logs $NAME

  tail-logs:
    desc: Tail Docker logs
    run: sudo docker logs --tail=20 -f $NAME

  health:
    desc: Application health check
    run: curl localhost:$HOST_PORT

  shell:
    desc: Interactive shell on all hosts
    stdin: true
    run: /bin/sh

  exec:
    desc: Interactive docker exec on all hosts
    stdin: true
    run: docker exec -i $NAME bash

targets: # Aliases to run multiple commands at once
  deploy:
    #- pull
    - upload
    - build
    - image
    - config
    - stop
    - rm
    - run
    - ps
    - logs
    - health
